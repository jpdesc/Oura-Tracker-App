"""empty message

Revision ID: 6602efc94587
Revises: 0ecb4e38e2b1
Create Date: 2022-09-25 11:44:29.804756

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6602efc94587'
down_revision = '0ecb4e38e2b1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workout')
    op.drop_table('sleep')
    op.drop_table('template')
    op.drop_table('tag')
    op.drop_table('readiness')
    op.drop_table('weights')
    op.drop_table('events')
    op.drop_table('user')
    op.drop_table('tags')
    op.drop_table('log')
    op.create_unique_constraint(None, 'day', ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'day', type_='unique')
    op.create_table('log',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('focus', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mood', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('energy', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('journal', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('stress', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='log_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='idx_17417_log_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('tags',
    sa.Column('tag_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('log_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['log_id'], ['log.id'], name='tags_log_id_fkey'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name='tags_tag_id_fkey'),
    sa.PrimaryKeyConstraint('tag_id', 'log_id', name='tags_pkey')
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key'),
    sa.UniqueConstraint('id', name='user_id_key'),
    sa.UniqueConstraint('username', name='user_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('events',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('event', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='events_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='events_pkey'),
    sa.UniqueConstraint('id', name='events_id_key')
    )
    op.create_table('weights',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('exercises', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('set_ranges', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('reps', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('weight', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('workout_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('workout_week', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('subbed', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('template_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['template_id'], ['template.id'], name='weights_template_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='weights_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='idx_17440_weights_pkey')
    )
    op.create_table('readiness',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('hrv_balance', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('recovery_index', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('resting_hr', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('temperature', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('readiness_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='readiness_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='idx_17432_readiness_pkey')
    )
    op.create_table('tag',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('tag', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='tag_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tag_pkey'),
    sa.UniqueConstraint('id', name='tag_id_key'),
    sa.UniqueConstraint('tag', name='tag_tag_key')
    )
    op.create_table('template',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('start_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('template_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('num_days', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('row_nums', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True),
    sa.Column('num_excs', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='template_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='template_pkey')
    )
    op.create_table('sleep',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('sleep_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_rem_sleep', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('total_deep_sleep', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sleep_efficiency', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('restlessness', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rem_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('deep_score', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_sleep', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('food_cutoff', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('seconds_sleep', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='sleep_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='idx_17422_sleep_pkey')
    )
    op.create_table('workout',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('filename', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('soreness', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('workout_log', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('grade', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='workout_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='idx_17435_workout_pkey')
    )
    # ### end Alembic commands ###
